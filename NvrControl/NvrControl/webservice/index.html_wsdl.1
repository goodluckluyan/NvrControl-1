<?xml version="1.0" encoding="UTF-8"?>
<definitions name="Service"
 targetNamespace="http://tempuri.org/mons.xsd/Service.wsdl"
 xmlns:tns="http://tempuri.org/mons.xsd/Service.wsdl"
 xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:mons="http://tempuri.org/mons.xsd"
 xmlns:SOAP="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:HTTP="http://schemas.xmlsoap.org/wsdl/http/"
 xmlns:MIME="http://schemas.xmlsoap.org/wsdl/mime/"
 xmlns:DIME="http://schemas.xmlsoap.org/ws/2002/04/dime/wsdl/"
 xmlns:WSDL="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">

<types>

 <schema targetNamespace="http://tempuri.org/mons.xsd"
  xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:mons="http://tempuri.org/mons.xsd"
  xmlns="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="unqualified"
  attributeFormDefault="unqualified">
  <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
  <complexType name="SMSState"><!-- mons__SMSState -->

   <sequence>
     <element name="HallId" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__SMSState::HallId -->
     <element name="bRun" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__SMSState::bRun -->
     <element name="state" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__SMSState::state -->
     <element name="position" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__SMSState::position -->
     <element name="strSplUuid" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__SMSState::strSplUuid -->
   </sequence>
  </complexType>
  <complexType name="ethstate"><!-- mons__ethstate -->

   <sequence>
     <element name="eth" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__ethstate::eth -->
     <element name="type" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__ethstate::type -->
     <element name="ConnectState" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__ethstate::ConnectState -->
     <element name="speed" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__ethstate::speed -->
   </sequence>
  </complexType>
  <complexType name="SMSPositionInfo"><!-- mons__SMSPositionInfo -->

   <sequence>
     <element name="strPos" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__SMSPositionInfo::strPos -->
     <element name="nPort" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__SMSPositionInfo::nPort -->
   </sequence>
  </complexType>
  <!-- operation request element -->
  <element name="GetMontorState">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="MontorStateRes">
   <complexType>
    <sequence>
     <element name="bMain" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__MontorStateRes::bMain -->
     <element name="iState" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__MontorStateRes::iState -->
     <element name="lSynch" type="xsd:long" minOccurs="1" maxOccurs="1"/><!-- mons__MontorStateRes::lSynch -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetTMSState">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="TmsStateRes">
   <complexType>
    <sequence>
     <element name="bRun" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__TmsStateRes::bRun -->
     <element name="iWorkState" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__TmsStateRes::iWorkState -->
     <element name="iState" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__TmsStateRes::iState -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetSMSState">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="GetSMSStateResponse">
   <complexType>
    <sequence>
     <element name="vecret" type="mons:SMSState" minOccurs="1" maxOccurs="unbounded"/><!-- mons__GetSMSState::vecret -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetRaidtate">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="RaidStateRes">
   <complexType>
    <sequence>
     <element name="state" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__RaidStateRes::state -->
     <element name="ReadSpeed" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__RaidStateRes::ReadSpeed -->
     <element name="WriteSpeed" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__RaidStateRes::WriteSpeed -->
     <element name="diskState" type="xsd:int" minOccurs="0" maxOccurs="unbounded"/><!-- mons__RaidStateRes::diskState -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetEthState">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="GetEthStateResponse">
   <complexType>
    <sequence>
     <element name="vecret" type="mons:ethstate" minOccurs="1" maxOccurs="unbounded"/><!-- mons__GetEthState::vecret -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetSwitchState">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="SwitchStateRes">
   <complexType>
    <sequence>
     <element name="Switch1State" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__SwitchStateRes::Switch1State -->
     <element name="Switch2State" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__SwitchStateRes::Switch2State -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetIngestSpeedLimit">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="IngestSpeedLimitRes">
   <complexType>
    <sequence>
     <element name="bEnableIngest" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__IngestSpeedLimitRes::bEnableIngest -->
     <element name="speedLimit" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__IngestSpeedLimitRes::speedLimit -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetWorkState_CS">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="WorkStateRes">
   <complexType>
    <sequence>
     <element name="state" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__WorkStateRes::state -->
     <element name="info" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__WorkStateRes::info -->
     <element name="hall" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__WorkStateRes::hall -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="ExeSwitchTMSToOther">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="ExeSwitchTMSToOtherResponse">
   <complexType>
    <sequence>
     <element name="ret" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__ExeSwitchTMSToOther::ret -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="ExeSwitchSMSToOther">
   <complexType>
    <sequence>
     <element name="strHallID" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__ExeSwitchSMSToOther::strHallID -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="ExeSwitchSMSToOtherResponse">
   <complexType>
    <sequence>
     <element name="ret" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__ExeSwitchSMSToOther::ret -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="ExeSwitchSMSToOtherDelay">
   <complexType>
    <sequence>
     <element name="strHallID" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__ExeSwitchSMSToOtherDelay::strHallID -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="ExeSwitchSMSToOtherDelayResponse">
   <complexType>
    <sequence>
     <element name="ret" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__ExeSwitchSMSToOtherDelay::ret -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="ExeCloseSMS">
   <complexType>
    <sequence>
     <element name="strHallID" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__ExeCloseSMS::strHallID -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="ExeCloseSMSResponse">
   <complexType>
    <sequence>
     <element name="ret" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__ExeCloseSMS::ret -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="ExeStartSMS">
   <complexType>
    <sequence>
     <element name="strHallID" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__ExeStartSMS::strHallID -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="ExeStartSMSResponse">
   <complexType>
    <sequence>
     <element name="ret" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__ExeStartSMS::ret -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="ExeDcpHashCheck">
   <complexType>
    <sequence>
     <element name="path" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__ExeDcpHashCheck::path -->
     <element name="PklUuid" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__ExeDcpHashCheck::PklUuid -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="ExeDcpHashCheckResponse">
   <complexType>
    <sequence>
     <element name="errorInfo" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__ExeDcpHashCheck::errorInfo -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="ExeGetHashCheckPercent">
   <complexType>
    <sequence>
     <element name="PklUuid" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__ExeGetHashCheckPercent::PklUuid -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="HashCheckPercent">
   <complexType>
    <sequence>
     <element name="Result" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__HashCheckPercent::Result -->
     <element name="nPercent" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__HashCheckPercent::nPercent -->
     <element name="errorInfo" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__HashCheckPercent::errorInfo -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="CopyDcp">
   <complexType>
    <sequence>
     <element name="PklUuid" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__CopyDcp::PklUuid -->
     <element name="srcPath" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__CopyDcp::srcPath -->
     <element name="desPath" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__CopyDcp::desPath -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="FileOperationResult">
   <complexType>
    <sequence>
     <element name="Result" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__FileOperationResult::Result -->
     <element name="errorInfo" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__FileOperationResult::errorInfo -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetCopyDcpProgress">
   <complexType>
    <sequence>
     <element name="PklUuid" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__GetCopyDcpProgress::PklUuid -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="DeleteDcp">
   <complexType>
    <sequence>
     <element name="PklUuid" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__DeleteDcp::PklUuid -->
     <element name="Path" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__DeleteDcp::Path -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetDeleteDcpProgress">
   <complexType>
    <sequence>
     <element name="PklUuid" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__GetDeleteDcpProgress::PklUuid -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="SetDBSynchSign">
   <complexType>
    <sequence>
     <element name="dbsynch" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__SetDBSynchSign::dbsynch -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="SetDBSynchSignResponse">
   <complexType>
    <sequence>
     <element name="ret" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__SetDBSynchSign::ret -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetDBSynchStatus">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="GetDBSynchStatusResponse">
   <complexType>
    <sequence>
     <element name="state" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__GetDBSynchStatus::state -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="ShutdownServer">
   <complexType>
    <sequence>
     <element name="nType" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__ShutdownServer::nType -->
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="RebootServerResult">
   <complexType>
    <sequence>
     <element name="state" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__RebootServerResult::state -->
     <element name="strDesc" type="xsd:string" minOccurs="1" maxOccurs="1"/><!-- mons__RebootServerResult::strDesc -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="TimingRebootServer">
   <complexType>
    <sequence>
     <element name="nDay" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__TimingRebootServer::nDay -->
     <element name="nWeek" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__TimingRebootServer::nWeek -->
     <element name="nHour" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__TimingRebootServer::nHour -->
     <element name="nMinute" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__TimingRebootServer::nMinute -->
     <element name="nRepeatType" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__TimingRebootServer::nRepeatType -->
     <element name="nRepeatCnt" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__TimingRebootServer::nRepeatCnt -->
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="AskAboutSlaveRestoreSwitch">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="AskAboutSlaveRestoreSwitchResponse">
   <complexType>
    <sequence>
     <element name="nIsSwitch" type="xsd:int" minOccurs="1" maxOccurs="1"/><!-- mons__AskAboutSlaveRestoreSwitch::nIsSwitch -->
    </sequence>
   </complexType>
  </element>
 </schema>

</types>

<message name="GetMontorState">
 <part name="Body" element="mons:GetMontorState"/><!-- mons__GetMontorState::mons__GetMontorState -->
</message>

<message name="MontorStateRes">
 <part name="Body" element="mons:MontorStateRes"/><!-- mons__GetMontorState::ret -->
</message>

<message name="GetTMSState">
 <part name="Body" element="mons:GetTMSState"/><!-- mons__GetTMSState::mons__GetTMSState -->
</message>

<message name="TmsStateRes">
 <part name="Body" element="mons:TmsStateRes"/><!-- mons__GetTMSState::ret -->
</message>

<message name="GetSMSStateRequest">
 <part name="Body" element="mons:GetSMSState"/><!-- mons__GetSMSState::mons__GetSMSState -->
</message>

<message name="GetSMSStateResponse">
 <part name="Body" element="mons:GetSMSStateResponse"/>
</message>

<message name="GetRaidtate">
 <part name="Body" element="mons:GetRaidtate"/><!-- mons__GetRaidtate::mons__GetRaidtate -->
</message>

<message name="RaidStateRes">
 <part name="Body" element="mons:RaidStateRes"/><!-- mons__GetRaidtate::ret -->
</message>

<message name="GetEthStateRequest">
 <part name="Body" element="mons:GetEthState"/><!-- mons__GetEthState::mons__GetEthState -->
</message>

<message name="GetEthStateResponse">
 <part name="Body" element="mons:GetEthStateResponse"/>
</message>

<message name="GetSwitchState">
 <part name="Body" element="mons:GetSwitchState"/><!-- mons__GetSwitchState::mons__GetSwitchState -->
</message>

<message name="SwitchStateRes">
 <part name="Body" element="mons:SwitchStateRes"/><!-- mons__GetSwitchState::ret -->
</message>

<message name="GetIngestSpeedLimit">
 <part name="Body" element="mons:GetIngestSpeedLimit"/><!-- mons__GetIngestSpeedLimit::mons__GetIngestSpeedLimit -->
</message>

<message name="IngestSpeedLimitRes">
 <part name="Body" element="mons:IngestSpeedLimitRes"/><!-- mons__GetIngestSpeedLimit::ret -->
</message>

<message name="GetWorkState_CS">
 <part name="Body" element="mons:GetWorkState_CS"/><!-- mons__GetWorkState_USCORECS::mons__GetWorkState_USCORECS -->
</message>

<message name="WorkStateRes">
 <part name="Body" element="mons:WorkStateRes"/><!-- mons__GetWorkState_USCORECS::ret -->
</message>

<message name="ExeSwitchTMSToOtherRequest">
 <part name="Body" element="mons:ExeSwitchTMSToOther"/><!-- mons__ExeSwitchTMSToOther::mons__ExeSwitchTMSToOther -->
</message>

<message name="ExeSwitchTMSToOtherResponse">
 <part name="Body" element="mons:ExeSwitchTMSToOtherResponse"/>
</message>

<message name="ExeSwitchSMSToOtherRequest">
 <part name="Body" element="mons:ExeSwitchSMSToOther"/><!-- mons__ExeSwitchSMSToOther::mons__ExeSwitchSMSToOther -->
</message>

<message name="ExeSwitchSMSToOtherResponse">
 <part name="Body" element="mons:ExeSwitchSMSToOtherResponse"/>
</message>

<message name="ExeSwitchSMSToOtherDelayRequest">
 <part name="Body" element="mons:ExeSwitchSMSToOtherDelay"/><!-- mons__ExeSwitchSMSToOtherDelay::mons__ExeSwitchSMSToOtherDelay -->
</message>

<message name="ExeSwitchSMSToOtherDelayResponse">
 <part name="Body" element="mons:ExeSwitchSMSToOtherDelayResponse"/>
</message>

<message name="ExeCloseSMSRequest">
 <part name="Body" element="mons:ExeCloseSMS"/><!-- mons__ExeCloseSMS::mons__ExeCloseSMS -->
</message>

<message name="ExeCloseSMSResponse">
 <part name="Body" element="mons:ExeCloseSMSResponse"/>
</message>

<message name="ExeStartSMSRequest">
 <part name="Body" element="mons:ExeStartSMS"/><!-- mons__ExeStartSMS::mons__ExeStartSMS -->
</message>

<message name="ExeStartSMSResponse">
 <part name="Body" element="mons:ExeStartSMSResponse"/>
</message>

<message name="ExeDcpHashCheckRequest">
 <part name="Body" element="mons:ExeDcpHashCheck"/><!-- mons__ExeDcpHashCheck::mons__ExeDcpHashCheck -->
</message>

<message name="ExeDcpHashCheckResponse">
 <part name="Body" element="mons:ExeDcpHashCheckResponse"/>
</message>

<message name="ExeGetHashCheckPercent">
 <part name="Body" element="mons:ExeGetHashCheckPercent"/><!-- mons__ExeGetHashCheckPercent::mons__ExeGetHashCheckPercent -->
</message>

<message name="HashCheckPercent">
 <part name="Body" element="mons:HashCheckPercent"/><!-- mons__ExeGetHashCheckPercent::stResult -->
</message>

<message name="CopyDcp">
 <part name="Body" element="mons:CopyDcp"/><!-- mons__CopyDcp::mons__CopyDcp -->
</message>

<message name="FileOperationResult">
 <part name="Body" element="mons:FileOperationResult"/><!-- mons__CopyDcp::result -->
</message>

<message name="GetCopyDcpProgress">
 <part name="Body" element="mons:GetCopyDcpProgress"/><!-- mons__GetCopyDcpProgress::mons__GetCopyDcpProgress -->
</message>

<message name="DeleteDcp">
 <part name="Body" element="mons:DeleteDcp"/><!-- mons__DeleteDcp::mons__DeleteDcp -->
</message>

<message name="GetDeleteDcpProgress">
 <part name="Body" element="mons:GetDeleteDcpProgress"/><!-- mons__GetDeleteDcpProgress::mons__GetDeleteDcpProgress -->
</message>

<message name="SetDBSynchSignRequest">
 <part name="Body" element="mons:SetDBSynchSign"/><!-- mons__SetDBSynchSign::mons__SetDBSynchSign -->
</message>

<message name="SetDBSynchSignResponse">
 <part name="Body" element="mons:SetDBSynchSignResponse"/>
</message>

<message name="GetDBSynchStatusRequest">
 <part name="Body" element="mons:GetDBSynchStatus"/><!-- mons__GetDBSynchStatus::mons__GetDBSynchStatus -->
</message>

<message name="GetDBSynchStatusResponse">
 <part name="Body" element="mons:GetDBSynchStatusResponse"/>
</message>

<message name="ShutdownServer">
 <part name="Body" element="mons:ShutdownServer"/><!-- mons__ShutdownServer::mons__ShutdownServer -->
</message>

<message name="RebootServerResult">
 <part name="Body" element="mons:RebootServerResult"/><!-- mons__ShutdownServer::result -->
</message>

<message name="TimingRebootServer">
 <part name="Body" element="mons:TimingRebootServer"/><!-- mons__TimingRebootServer::mons__TimingRebootServer -->
</message>

<message name="AskAboutSlaveRestoreSwitchRequest">
 <part name="Body" element="mons:AskAboutSlaveRestoreSwitch"/><!-- mons__AskAboutSlaveRestoreSwitch::mons__AskAboutSlaveRestoreSwitch -->
</message>

<message name="AskAboutSlaveRestoreSwitchResponse">
 <part name="Body" element="mons:AskAboutSlaveRestoreSwitchResponse"/>
</message>

<portType name="ServicePortType">
 <operation name="GetMontorState">
  <documentation>Service definition of function mons__GetMontorState</documentation>
  <input message="tns:GetMontorState"/>
  <output message="tns:MontorStateRes"/>
 </operation>
 <operation name="GetTMSState">
  <documentation>Service definition of function mons__GetTMSState</documentation>
  <input message="tns:GetTMSState"/>
  <output message="tns:TmsStateRes"/>
 </operation>
 <operation name="GetSMSState">
  <documentation>Service definition of function mons__GetSMSState</documentation>
  <input message="tns:GetSMSStateRequest"/>
  <output message="tns:GetSMSStateResponse"/>
 </operation>
 <operation name="GetRaidtate">
  <documentation>Service definition of function mons__GetRaidtate</documentation>
  <input message="tns:GetRaidtate"/>
  <output message="tns:RaidStateRes"/>
 </operation>
 <operation name="GetEthState">
  <documentation>Service definition of function mons__GetEthState</documentation>
  <input message="tns:GetEthStateRequest"/>
  <output message="tns:GetEthStateResponse"/>
 </operation>
 <operation name="GetSwitchState">
  <documentation>Service definition of function mons__GetSwitchState</documentation>
  <input message="tns:GetSwitchState"/>
  <output message="tns:SwitchStateRes"/>
 </operation>
 <operation name="GetIngestSpeedLimit">
  <documentation>Service definition of function mons__GetIngestSpeedLimit</documentation>
  <input message="tns:GetIngestSpeedLimit"/>
  <output message="tns:IngestSpeedLimitRes"/>
 </operation>
 <operation name="GetWorkState_CS">
  <documentation>Service definition of function mons__GetWorkState_USCORECS</documentation>
  <input message="tns:GetWorkState_CS"/>
  <output message="tns:WorkStateRes"/>
 </operation>
 <operation name="ExeSwitchTMSToOther">
  <documentation>Service definition of function mons__ExeSwitchTMSToOther</documentation>
  <input message="tns:ExeSwitchTMSToOtherRequest"/>
  <output message="tns:ExeSwitchTMSToOtherResponse"/>
 </operation>
 <operation name="ExeSwitchSMSToOther">
  <documentation>Service definition of function mons__ExeSwitchSMSToOther</documentation>
  <input message="tns:ExeSwitchSMSToOtherRequest"/>
  <output message="tns:ExeSwitchSMSToOtherResponse"/>
 </operation>
 <operation name="ExeSwitchSMSToOtherDelay">
  <documentation>Service definition of function mons__ExeSwitchSMSToOtherDelay</documentation>
  <input message="tns:ExeSwitchSMSToOtherDelayRequest"/>
  <output message="tns:ExeSwitchSMSToOtherDelayResponse"/>
 </operation>
 <operation name="ExeCloseSMS">
  <documentation>Service definition of function mons__ExeCloseSMS</documentation>
  <input message="tns:ExeCloseSMSRequest"/>
  <output message="tns:ExeCloseSMSResponse"/>
 </operation>
 <operation name="ExeStartSMS">
  <documentation>Service definition of function mons__ExeStartSMS</documentation>
  <input message="tns:ExeStartSMSRequest"/>
  <output message="tns:ExeStartSMSResponse"/>
 </operation>
 <operation name="ExeDcpHashCheck">
  <documentation>Service definition of function mons__ExeDcpHashCheck</documentation>
  <input message="tns:ExeDcpHashCheckRequest"/>
  <output message="tns:ExeDcpHashCheckResponse"/>
 </operation>
 <operation name="ExeGetHashCheckPercent">
  <documentation>Service definition of function mons__ExeGetHashCheckPercent</documentation>
  <input message="tns:ExeGetHashCheckPercent"/>
  <output message="tns:HashCheckPercent"/>
 </operation>
 <operation name="CopyDcp">
  <documentation>Service definition of function mons__CopyDcp</documentation>
  <input message="tns:CopyDcp"/>
  <output message="tns:FileOperationResult"/>
 </operation>
 <operation name="GetCopyDcpProgress">
  <documentation>Service definition of function mons__GetCopyDcpProgress</documentation>
  <input message="tns:GetCopyDcpProgress"/>
  <output message="tns:FileOperationResult"/>
 </operation>
 <operation name="DeleteDcp">
  <documentation>Service definition of function mons__DeleteDcp</documentation>
  <input message="tns:DeleteDcp"/>
  <output message="tns:FileOperationResult"/>
 </operation>
 <operation name="GetDeleteDcpProgress">
  <documentation>Service definition of function mons__GetDeleteDcpProgress</documentation>
  <input message="tns:GetDeleteDcpProgress"/>
  <output message="tns:FileOperationResult"/>
 </operation>
 <operation name="SetDBSynchSign">
  <documentation>Service definition of function mons__SetDBSynchSign</documentation>
  <input message="tns:SetDBSynchSignRequest"/>
  <output message="tns:SetDBSynchSignResponse"/>
 </operation>
 <operation name="GetDBSynchStatus">
  <documentation>Service definition of function mons__GetDBSynchStatus</documentation>
  <input message="tns:GetDBSynchStatusRequest"/>
  <output message="tns:GetDBSynchStatusResponse"/>
 </operation>
 <operation name="ShutdownServer">
  <documentation>Service definition of function mons__ShutdownServer</documentation>
  <input message="tns:ShutdownServer"/>
  <output message="tns:RebootServerResult"/>
 </operation>
 <operation name="TimingRebootServer">
  <documentation>Service definition of function mons__TimingRebootServer</documentation>
  <input message="tns:TimingRebootServer"/>
  <output message="tns:RebootServerResult"/>
 </operation>
 <operation name="AskAboutSlaveRestoreSwitch">
  <documentation>Service definition of function mons__AskAboutSlaveRestoreSwitch</documentation>
  <input message="tns:AskAboutSlaveRestoreSwitchRequest"/>
  <output message="tns:AskAboutSlaveRestoreSwitchResponse"/>
 </operation>
</portType>

<binding name="Service" type="tns:ServicePortType">
 <SOAP:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
 <operation name="GetMontorState">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="GetTMSState">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="GetSMSState">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="GetRaidtate">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="GetEthState">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="GetSwitchState">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="GetIngestSpeedLimit">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="GetWorkState_CS">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="ExeSwitchTMSToOther">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="ExeSwitchSMSToOther">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="ExeSwitchSMSToOtherDelay">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="ExeCloseSMS">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="ExeStartSMS">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="ExeDcpHashCheck">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="ExeGetHashCheckPercent">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="CopyDcp">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="GetCopyDcpProgress">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="DeleteDcp">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="GetDeleteDcpProgress">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="SetDBSynchSign">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="GetDBSynchStatus">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="ShutdownServer">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="TimingRebootServer">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
 <operation name="AskAboutSlaveRestoreSwitch">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="Body" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="Body" use="literal"/>
  </output>
 </operation>
</binding>

<service name="Service">
 <documentation>gSOAP 2.8.18 generated service definition</documentation>
 <port name="Service" binding="tns:Service">
  <SOAP:address location="http://localhost:80"/>
 </port>
</service>

</definitions>
