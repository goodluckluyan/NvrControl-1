/* soapStub.h
   Generated by gSOAP 2.8.18 from webservice.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#include <vector>
#include <iostream>
#include "stdsoap2.h"
#if GSOAP_VERSION != 20818
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_mons__get1
#define SOAP_TYPE_mons__get1 (8)
/* mons:get1 */
struct mons__get1
{
public:
	int i;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
public:
	int soap_type() const { return 8; } /* = unique type id SOAP_TYPE_mons__get1 */
};
#endif

#ifndef SOAP_TYPE_mons__GetoneInfos
#define SOAP_TYPE_mons__GetoneInfos (11)
/* mons:GetoneInfos */
struct mons__GetoneInfos
{
public:
	int soap_type() const { return 11; } /* = unique type id SOAP_TYPE_mons__GetoneInfos */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_mons__SetDLSpeedResponse
#define SOAP_TYPE_mons__SetDLSpeedResponse (12)
/* mons:SetDLSpeedResponse */
struct mons__SetDLSpeedResponse
{
public:
	bool isTrue;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 12; } /* = unique type id SOAP_TYPE_mons__SetDLSpeedResponse */
};
#endif

#ifndef SOAP_TYPE_mons__SetDlSpeed
#define SOAP_TYPE_mons__SetDlSpeed (16)
/* mons:SetDlSpeed */
struct mons__SetDlSpeed
{
public:
	bool isOK;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 16; } /* = unique type id SOAP_TYPE_mons__SetDlSpeed */
};
#endif

#ifndef SOAP_TYPE_mons__DownloadTime
#define SOAP_TYPE_mons__DownloadTime (17)
/* mons:DownloadTime */
struct mons__DownloadTime
{
public:
	unsigned int dwYear;	/* required element of type xsd:unsignedInt */
	unsigned int dwMonth;	/* required element of type xsd:unsignedInt */
	unsigned int dwDay;	/* required element of type xsd:unsignedInt */
	unsigned int dwHour;	/* required element of type xsd:unsignedInt */
	unsigned int dwMinute;	/* required element of type xsd:unsignedInt */
	unsigned int dwSecond;	/* required element of type xsd:unsignedInt */
public:
	int soap_type() const { return 17; } /* = unique type id SOAP_TYPE_mons__DownloadTime */
};
#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_mons__DownloadTimeResponse
#define SOAP_TYPE_mons__DownloadTimeResponse (19)
/* mons:DownloadTimeResponse */
struct mons__DownloadTimeResponse
{
public:
	int id;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	std::string fileNameMp4;	/* required element of type xsd:string */
	bool isOK;	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 19; } /* = unique type id SOAP_TYPE_mons__DownloadTimeResponse */
};
#endif

#ifndef SOAP_TYPE_mons__DownLoadByTime
#define SOAP_TYPE_mons__DownLoadByTime (23)
/* mons:DownLoadByTime */
struct mons__DownLoadByTime
{
public:
	int id;	/* required element of type xsd:int */
	int nAudiNU;	/* required element of type xsd:int */
	int nDevicePo;	/* required element of type xsd:int */
	struct mons__DownloadTime tmStart;	/* required element of type mons:DownloadTime */
	struct mons__DownloadTime tmEnd;	/* required element of type mons:DownloadTime */
	std::string storePath;	/* required element of type xsd:string */
	std::string mp4name;	/* required element of type xsd:string */
public:
	int soap_type() const { return 23; } /* = unique type id SOAP_TYPE_mons__DownLoadByTime */
};
#endif

#ifndef SOAP_TYPE_mons__IPCINFO
#define SOAP_TYPE_mons__IPCINFO (24)
/* mons:IPCINFO */
struct mons__IPCINFO
{
public:
	int HallNo;	/* required element of type xsd:int */
	int ipcPo;	/* required element of type xsd:int */
	int channelID;	/* required element of type xsd:int */
public:
	int soap_type() const { return 24; } /* = unique type id SOAP_TYPE_mons__IPCINFO */
};
#endif

#ifndef SOAP_TYPE_mons__SetIpcInfoRes
#define SOAP_TYPE_mons__SetIpcInfoRes (25)
/* mons:SetIpcInfoRes */
struct mons__SetIpcInfoRes
{
public:
	bool isOK;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 25; } /* = unique type id SOAP_TYPE_mons__SetIpcInfoRes */
};
#endif

#ifndef SOAP_TYPE_mons__SetIpcInfo
#define SOAP_TYPE_mons__SetIpcInfo (28)
/* mons:SetIpcInfo */
struct mons__SetIpcInfo
{
public:
	int HallNo;	/* required element of type xsd:int */
	int ipcPo;	/* required element of type xsd:int */
	int channelID;	/* required element of type xsd:int */
public:
	int soap_type() const { return 28; } /* = unique type id SOAP_TYPE_mons__SetIpcInfo */
};
#endif

#ifndef SOAP_TYPE_mons__GetSystemTimeRes
#define SOAP_TYPE_mons__GetSystemTimeRes (29)
/* mons:GetSystemTimeRes */
struct mons__GetSystemTimeRes
{
public:
	unsigned int unYear;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:unsignedInt */
	unsigned int unMonth;	/* required element of type xsd:unsignedInt */
	unsigned int unDay;	/* required element of type xsd:unsignedInt */
	unsigned int unHour;	/* required element of type xsd:unsignedInt */
	unsigned int unMinute;	/* required element of type xsd:unsignedInt */
	unsigned int unSecond;	/* required element of type xsd:unsignedInt */
public:
	int soap_type() const { return 29; } /* = unique type id SOAP_TYPE_mons__GetSystemTimeRes */
};
#endif

#ifndef SOAP_TYPE_mons__GetSystemTimeInfo
#define SOAP_TYPE_mons__GetSystemTimeInfo (32)
/* mons:GetSystemTimeInfo */
struct mons__GetSystemTimeInfo
{
public:
	int soap_type() const { return 32; } /* = unique type id SOAP_TYPE_mons__GetSystemTimeInfo */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_mons__SetSystemtimeInfo
#define SOAP_TYPE_mons__SetSystemtimeInfo (33)
/* mons:SetSystemtimeInfo */
struct mons__SetSystemtimeInfo
{
public:
	unsigned int unYear;	/* required element of type xsd:unsignedInt */
	unsigned int unMonth;	/* required element of type xsd:unsignedInt */
	unsigned int unDay;	/* required element of type xsd:unsignedInt */
	unsigned int unHour;	/* required element of type xsd:unsignedInt */
	unsigned int unMinute;	/* required element of type xsd:unsignedInt */
	unsigned int unSecond;	/* required element of type xsd:unsignedInt */
public:
	int soap_type() const { return 33; } /* = unique type id SOAP_TYPE_mons__SetSystemtimeInfo */
};
#endif

#ifndef SOAP_TYPE_mons__SetSystemInfoRes
#define SOAP_TYPE_mons__SetSystemInfoRes (34)
/* mons:SetSystemInfoRes */
struct mons__SetSystemInfoRes
{
public:
	bool isOK;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 34; } /* = unique type id SOAP_TYPE_mons__SetSystemInfoRes */
};
#endif

#ifndef SOAP_TYPE_mons__SetSystemTime
#define SOAP_TYPE_mons__SetSystemTime (37)
/* mons:SetSystemTime */
struct mons__SetSystemTime
{
public:
	struct mons__SetSystemtimeInfo timeInfos;	/* required element of type mons:SetSystemtimeInfo */
public:
	int soap_type() const { return 37; } /* = unique type id SOAP_TYPE_mons__SetSystemTime */
};
#endif

#ifndef SOAP_TYPE_mons__InitRes
#define SOAP_TYPE_mons__InitRes (38)
/* mons:InitRes */
struct mons__InitRes
{
public:
	bool isOK;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 38; } /* = unique type id SOAP_TYPE_mons__InitRes */
};
#endif

#ifndef SOAP_TYPE_mons__DInit
#define SOAP_TYPE_mons__DInit (41)
/* mons:DInit */
struct mons__DInit
{
public:
	int soap_type() const { return 41; } /* = unique type id SOAP_TYPE_mons__DInit */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_mons__ReleaseRes
#define SOAP_TYPE_mons__ReleaseRes (42)
/* mons:ReleaseRes */
struct mons__ReleaseRes
{
public:
	bool isOK;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 42; } /* = unique type id SOAP_TYPE_mons__ReleaseRes */
};
#endif

#ifndef SOAP_TYPE_mons__DRelease
#define SOAP_TYPE_mons__DRelease (45)
/* mons:DRelease */
struct mons__DRelease
{
public:
	int soap_type() const { return 45; } /* = unique type id SOAP_TYPE_mons__DRelease */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_mons__GetIpcResoluRatioInfo
#define SOAP_TYPE_mons__GetIpcResoluRatioInfo (46)
/* mons:GetIpcResoluRatioInfo */
struct mons__GetIpcResoluRatioInfo
{
public:
	std::vector<std::string >ResoluRatios;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
public:
	int soap_type() const { return 46; } /* = unique type id SOAP_TYPE_mons__GetIpcResoluRatioInfo */
};
#endif

#ifndef SOAP_TYPE_mons__GetIpcResoluRatio
#define SOAP_TYPE_mons__GetIpcResoluRatio (50)
/* mons:GetIpcResoluRatio */
struct mons__GetIpcResoluRatio
{
public:
	int nAudiNU;	/* required element of type xsd:int */
	int nDevicePo;	/* required element of type xsd:int */
public:
	int soap_type() const { return 50; } /* = unique type id SOAP_TYPE_mons__GetIpcResoluRatio */
};
#endif

#ifndef SOAP_TYPE_mons__GetIpcVedioQualityInfo
#define SOAP_TYPE_mons__GetIpcVedioQualityInfo (51)
/* mons:GetIpcVedioQualityInfo */
struct mons__GetIpcVedioQualityInfo
{
public:
	std::string ResoluRatio;	/* required element of type xsd:string */
	int frame;	/* required element of type xsd:int */
	std::string CodeMode;	/* required element of type xsd:string */
	int stream;	/* required element of type xsd:int */
public:
	int soap_type() const { return 51; } /* = unique type id SOAP_TYPE_mons__GetIpcVedioQualityInfo */
};
#endif

#ifndef SOAP_TYPE_mons__GetIpcVedioQualityInfoRes
#define SOAP_TYPE_mons__GetIpcVedioQualityInfoRes (52)
/* mons:GetIpcVedioQualityInfoRes */
struct mons__GetIpcVedioQualityInfoRes
{
public:
	struct mons__GetIpcVedioQualityInfo vedioQuality;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type mons:GetIpcVedioQualityInfo */
public:
	int soap_type() const { return 52; } /* = unique type id SOAP_TYPE_mons__GetIpcVedioQualityInfoRes */
};
#endif

#ifndef SOAP_TYPE_mons__GetIpcVedioQuality
#define SOAP_TYPE_mons__GetIpcVedioQuality (55)
/* mons:GetIpcVedioQuality */
struct mons__GetIpcVedioQuality
{
public:
	int nAudiNU;	/* required element of type xsd:int */
	int nDevicePo;	/* required element of type xsd:int */
public:
	int soap_type() const { return 55; } /* = unique type id SOAP_TYPE_mons__GetIpcVedioQuality */
};
#endif

#ifndef SOAP_TYPE_mons__SetIpcVedioQualityInfo
#define SOAP_TYPE_mons__SetIpcVedioQualityInfo (56)
/* mons:SetIpcVedioQualityInfo */
struct mons__SetIpcVedioQualityInfo
{
public:
	std::string ResoluRatio;	/* required element of type xsd:string */
	int frame;	/* required element of type xsd:int */
	std::string CodeMode;	/* required element of type xsd:string */
	int stream;	/* required element of type xsd:int */
public:
	int soap_type() const { return 56; } /* = unique type id SOAP_TYPE_mons__SetIpcVedioQualityInfo */
};
#endif

#ifndef SOAP_TYPE_mons__SetIpcVedioQualityInfoRes
#define SOAP_TYPE_mons__SetIpcVedioQualityInfoRes (57)
/* mons:SetIpcVedioQualityInfoRes */
struct mons__SetIpcVedioQualityInfoRes
{
public:
	bool isOK;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
public:
	int soap_type() const { return 57; } /* = unique type id SOAP_TYPE_mons__SetIpcVedioQualityInfoRes */
};
#endif

#ifndef SOAP_TYPE_mons__SetIpcVedioQuality
#define SOAP_TYPE_mons__SetIpcVedioQuality (60)
/* mons:SetIpcVedioQuality */
struct mons__SetIpcVedioQuality
{
public:
	int nAudiNU;	/* required element of type xsd:int */
	int nDevicePo;	/* required element of type xsd:int */
	struct mons__SetIpcVedioQualityInfo vedioInfo;	/* required element of type mons:SetIpcVedioQualityInfo */
public:
	int soap_type() const { return 60; } /* = unique type id SOAP_TYPE_mons__SetIpcVedioQuality */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (61)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 61; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (62)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 62; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (64)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 64; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (67)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 67; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (68)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 68; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 mons__GetoneInfos(struct soap*, struct mons__get1 &ret);

SOAP_FMAC5 int SOAP_FMAC6 mons__SetDlSpeed(struct soap*, bool isOK, struct mons__SetDLSpeedResponse &ret);

SOAP_FMAC5 int SOAP_FMAC6 mons__DownLoadByTime(struct soap*, int id, int nAudiNU, int nDevicePo, struct mons__DownloadTime tmStart, struct mons__DownloadTime tmEnd, std::string storePath, std::string mp4name, struct mons__DownloadTimeResponse &ret);

SOAP_FMAC5 int SOAP_FMAC6 mons__SetIpcInfo(struct soap*, int HallNo, int ipcPo, int channelID, struct mons__SetIpcInfoRes &ret);

SOAP_FMAC5 int SOAP_FMAC6 mons__GetSystemTimeInfo(struct soap*, struct mons__GetSystemTimeRes &ret);

SOAP_FMAC5 int SOAP_FMAC6 mons__SetSystemTime(struct soap*, struct mons__SetSystemtimeInfo timeInfos, struct mons__SetSystemInfoRes &ret);

SOAP_FMAC5 int SOAP_FMAC6 mons__DInit(struct soap*, struct mons__InitRes &ret);

SOAP_FMAC5 int SOAP_FMAC6 mons__DRelease(struct soap*, struct mons__ReleaseRes &ret);

SOAP_FMAC5 int SOAP_FMAC6 mons__GetIpcResoluRatio(struct soap*, int nAudiNU, int nDevicePo, struct mons__GetIpcResoluRatioInfo &ret);

SOAP_FMAC5 int SOAP_FMAC6 mons__GetIpcVedioQuality(struct soap*, int nAudiNU, int nDevicePo, struct mons__GetIpcVedioQualityInfoRes &ret);

SOAP_FMAC5 int SOAP_FMAC6 mons__SetIpcVedioQuality(struct soap*, int nAudiNU, int nDevicePo, struct mons__SetIpcVedioQualityInfo vedioInfo, struct mons__SetIpcVedioQualityInfoRes &ret);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetoneInfos(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__SetDlSpeed(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__DownLoadByTime(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__SetIpcInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetSystemTimeInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__SetSystemTime(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__DInit(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__DRelease(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetIpcResoluRatio(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetIpcVedioQuality(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__SetIpcVedioQuality(struct soap*);

#endif

/* End of soapStub.h */
